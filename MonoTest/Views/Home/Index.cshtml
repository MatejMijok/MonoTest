@model MonoTest.ViewModels.PageViewModel<MonoTest.ViewModels.VehicleOverviewViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<h2>Index</h2>

@{
    ViewBag.Title = "Home";
}


@using (Html.BeginForm("Index", "Home", FormMethod.Get))
{
    <p>
        Search: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Make", "Index", new { sortOrder = ViewBag.MakeSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Make Abrv", "Index", new { sortOrder = ViewBag.AbrvSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Model Abrv", "Index", new { sortOrder = ViewBag.ModelAbrvSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Model Name", "Index", new { sortOrder = ViewBag.ModelNameSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
    </tr>


    @foreach (var item in Model.Items)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.MakeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MakeAbrv)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Abrv)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageNumber < Model.PageNumber ? 0 : Model.PageNumber) of @Math.Ceiling((double)Model.TotalItems / Model.PageSize)

<div>
    @if (Model.PageNumber > 1)
    {
        @Html.ActionLink("Previous", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
    }

    @if (Model.PageNumber < Math.Ceiling((double)Model.TotalItems / Model.PageSize))
    {
        @Html.ActionLink("Next", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
    }
</div>
